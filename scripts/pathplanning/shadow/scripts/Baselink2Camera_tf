#!/usr/bin/env python

import math
import rospy
import tf2_ros
import geometry_msgs.msg
from tf.transformations import quaternion_from_euler

t = geometry_msgs.msg.TransformStamped()

t.header.frame_id = "cf1/base_link"
t.child_frame_id = "cf1/camera_link"

t.transform.translation.x = 0.01
t.transform.translation.z = 0.02
(t.transform.rotation.x,
 t.transform.rotation.y,
 t.transform.rotation.z,
 t.transform.rotation.w) = quaternion_from_euler(math.radians(-90),
                                                  math.radians(0),
                                                  math.radians(90))


    # Publish these transforms statically forever
rospy.init_node('Baselink2Camera_tf')
broadcaster = tf2_ros.StaticTransformBroadcaster()
broadcaster.sendTransform(t)
rospy.spin()

if __name__ == "__main__":
    main()

