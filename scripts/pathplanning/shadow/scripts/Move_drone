#!/usr/bin/env python

import math
import rospy
import tf2_geometry_msgs
from geometry_msgs.msg import PoseStamped

rospy.init_node('Move_drone')
pub_cmd  = rospy.Publisher('move_base_simple/goal', PoseStamped, queue_size=2)

cmd = PoseStamped()
cmd.header.stamp = rospy.Time.now()
cmd.header.frame_id = "cf1/odom"

if pub_cmd.get_num_connections() <= 0:
	rospy.sleep(2.5)

cmd.pose.position.x = 8
cmd.pose.position.y = 0
cmd.pose.position.z = 0.5
cmd.pose.orientation.w = 1

pub_cmd.publish(cmd)
rospy.sleep(7.5)

cmd.pose.orientation.x = 0
cmd.pose.orientation.y = 0
cmd.pose.orientation.z = -0.707
cmd.pose.orientation.w = 0.707
pub_cmd.publish(cmd)
rospy.sleep(2.5)

cmd.pose.position.x = 8
cmd.pose.position.y = -2

pub_cmd.publish(cmd)
rospy.sleep(2.5)

cmd.pose.orientation.x = 0
cmd.pose.orientation.y = 0
cmd.pose.orientation.z = -1
cmd.pose.orientation.w = 0
pub_cmd.publish(cmd)
rospy.sleep(2.5)


cmd.pose.position.x = 0
cmd.pose.position.y = -2


pub_cmd.publish(cmd)
rospy.sleep(7.5)

cmd.pose.orientation.x = 0
cmd.pose.orientation.y = 0
cmd.pose.orientation.z = -0.707
cmd.pose.orientation.w = -0.707
pub_cmd.publish(cmd)
rospy.sleep(2.5)

cmd.pose.position.x = 0
cmd.pose.position.y = 2


pub_cmd.publish(cmd)
rospy.sleep(5)

cmd.pose.orientation.x = 0
cmd.pose.orientation.y = 0
cmd.pose.orientation.z = -0
cmd.pose.orientation.w = -1
pub_cmd.publish(cmd)
rospy.sleep(2.5)

def main():
    rate = rospy.Rate(100)  # Hz
  #  while not rospy.is_shutdown():
  #      if cmd:
     #       publish_cmd(cmd)
     #   rate.sleep()

if __name__ == '__main__':
    main()
